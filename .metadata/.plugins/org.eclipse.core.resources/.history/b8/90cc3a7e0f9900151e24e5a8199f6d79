/*
 * BTreeNode.h
 *
 *  Created on: 2 de dic. de 2015
 *      Author: santiago
 */

#ifndef BTREENODE_H_
#define BTREENODE_H_
#include <fstream>
#include<iostream>
#include <stdlib.h>
#include <stdio.h>
#include <math.h>
template<class T>
class BTreeNode
{
    T *keys;
    int t;
    BTreeNode<T> **C;
    int n;
    bool leaf;
public:
    BTreeNode(int t1, bool leaf1){
    	t = t1;
		leaf = leaf1;

		keys = new int[t];
		C = new BTreeNode<T> *[t+1];

		n = 0;
    }

    //void insertNonFull(int k);

    void insertar(int & k, BTreeNode<T> * & p);

    //void splitChild(int i, BTreeNode<T> *y);

    //bool hayEspacio(int k);

    //BTreeNode<T> *search(int k, BTreeNode<T> * &q);

    void printDot(ofstream& os){os<<"\""<<this <<"\""<<"[shape=record, label=\"{{ ";
		os<<keys[0];

		for(int i = 1; i<n; i++){
				os<<"|"<<keys[i];
		}
		os<<"} } \"];"<<endl;

		for(int i = 0 ; i<n+1; i++){
			if(C[i]){
			C[i]->printDot(os);
			os<<"\""<<this<<"\""<<"->"<<"\""<<C[i]<<"\""<<endl;
			}
		}
    }

    friend class BTree;
};



#endif /* BTREENODE_H_ */
